
plugins {
    id "com.heroku.sdk.heroku-gradle" version "2.0.0"
}


// TODO this isn't appropriate for all subprojects, just the Java ones (not React)
subprojects {

    apply plugin: 'java' // core plugin provided by gradle
    
    group = 'org.thinkbigthings.zdd'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }


    // use preview features
    tasks.withType(JavaCompile) {
        options.compilerArgs += "--enable-preview"
        // options.compilerArgs += "-Xlint:preview"
        options.compilerArgs += "-Xlint:unchecked"
        options.compilerArgs += "-Xlint:deprecation"
    }
    tasks.withType(Test) {
        jvmArgs += "--enable-preview"
    }
    tasks.withType(JavaExec) {
        jvmArgs += '--enable-preview'
    }
}

// use heroku gradle plugin
// https://github.com/heroku/heroku-gradle
heroku {

    appName = project.hasProperty('app') ? project.property('app') : 'stage-zdd-full'
    jdkVersion = 17
    includes = ["server/build/libs/server-1.0-SNAPSHOT.jar"]
    includeBuildDir = false

    processTypes(
        // The \$ is to escape $ for build.gradle, don't need the slash when running the command locally
        release: "java --enable-preview -Dspring.datasource.url='\${JDBC_DATABASE_URL}&autosave=conservative' -Dspring.profiles.active=migration -jar server/build/libs/server-1.0-SNAPSHOT.jar",
        web:     "java --enable-preview -Dspring.datasource.url='\${JDBC_DATABASE_URL}&autosave=conservative' -Dserver.port='\${PORT}'           -jar server/build/libs/server-1.0-SNAPSHOT.jar"
    )
}

task copyWebApp {
    description 'copies built files from reactjs to the server'
    dependsOn ':reactjs:build'
    doLast {
        copy {
            from(project(":reactjs").buildDir)
            into(project(":server").buildDir.toPath().resolve('resources/main/static'))
        }
    }
}

task build () {
    description 'builds the entire project with all sub-modules'
    dependsOn('copyWebApp')
    dependsOn(':server:bootJar')
}

project(':perf') {
    dependencies {
        implementation project(':dto')
    }
}

project(':server') {
    dependencies {
        implementation project(':dto')
    }
}
